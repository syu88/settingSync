<application>
  <component name="AppStorage">
    <histories>
      <item value="with root cause" />
      <item value="Returns an Optional describing the first element of this stream, or an empty Optional if the stream is empty. If the stream has no encounter order, then any element may be returned" />
      <item value="Replaces each element of this list with the result of applying the operator to that element. Errors or runtime exceptions thrown by the operator are relayed to the caller. Params: operator – the operator to apply to each element Throws: UnsupportedOperationException – if this list is unmodifiable. Implementations may throw this exception if an element cannot be replaced or if, in general, modification is not supported NullPointerException – if the specified operator is null or if the operator result is a null value and this list does not permit null elements (optional)" />
      <item value="alert" />
      <item value="Copies an array from the specified source array, beginning at the specified position, to the specified position of the destination array. A subsequence of array components are copied from the source array referenced by src to the destination array referenced by dest. The number of components copied is equal to the length argument. The components at positions srcPos through srcPos+length-1 in the source array are copied into positions destPos through destPos+length-1, respectively, of the destination array. If the src and dest arguments refer to the same array object, then the copying is performed as if the components at positions srcPos through srcPos+length-1 were first copied to a temporary array with length components and then the contents of the temporary array were copied into positions destPos through destPos+length-1 of the destination array. If dest is null, then a NullPointerException is thrown. If src is null, then a NullPointerException is thrown and the destination array is not modified. Otherwise, if any of the following is true, an ArrayStoreException is thrown and the destination is not modified:" />
      <item value="obile devices) among other things. To link an external stylesheet, you'd include a &lt;link&gt; element inside your &lt;head&gt; like this: &lt;link href=&quot;main.css&quot; rel=&quot;stylesheet&quot;&gt; This simple example provides the path to the stylesheet inside an href attribute, and a rel attribute with a value of stylesheet. The rel stands for &quot;relationship&quot;, and is probably one of the key features of the &lt;link&gt; element — the value denotes how the item being linked to is related to the containing document. As you'll see from our Link types reference, there are many different kinds of relationship. There are a number of other common types you'll come across. For example, a link to the site's favicon: &lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot;&gt; There are a number of other icon rel values, mainly used to indicate special icon types for use on various mobile platforms, e.g.: &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;apple-icon-114.png&quot; type=&quot;imagepng&quot;&gt;" />
      <item value="valperiod" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3" />
        <entry key="ENGLISH" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1655275112672" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryFontPreviewText" value="海内存知己&#10;天涯若比邻" />
  </component>
</application>